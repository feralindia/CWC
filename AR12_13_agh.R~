## Script to do analysis for annual report year 2012-2013
library(ggplot2)
library(zoo)
## This function was taken from <http://stackoverflow.com/questions/13297155/add-floating-axis-labels-in-facet-wrap-plot>
## helps organise teh scles

library(grid)
# pos - where to add new labels
# newpage, vp - see ?print.ggplot
facetAdjust <- function(x, pos = c("up", "down"), 
                        newpage = is.null(vp), vp = NULL)
{
  # part of print.ggplot
  ggplot2:::set_last_plot(x)
  if(newpage)
    grid.newpage()
  pos <- match.arg(pos)
  p <- ggplot_build(x)
  gtable <- ggplot_gtable(p)
  # finding dimensions
  dims <- apply(p$panel$layout[2:3], 2, max)
  nrow <- dims[1]
  ncol <- dims[2]
  # number of panels in the plot
  panels <- sum(grepl("panel", names(gtable$grobs)))
  space <- ncol * nrow
  # missing panels
  n <- space - panels
  # checking whether modifications are needed
  if(panels != space){
    # indices of panels to fix
    idx <- (space - ncol - n + 1):(space - ncol)
    # copying x-axis of the last existing panel to the chosen panels 
    # in the row above
    gtable$grobs[paste0("axis_b",idx)] <- list(gtable$grobs[[paste0("axis_b",panels)]])
    if(pos == "down"){
      # if pos == down then shifting labels down to the same level as 
      # the x-axis of last panel
      rows <- grep(paste0("axis_b\\-[", idx[1], "-", idx[n], "]"), 
                   gtable$layout$name)
      lastAxis <- grep(paste0("axis_b\\-", panels), gtable$layout$name)
      gtable$layout[rows, c("t","b")] <- gtable$layout[lastAxis, c("t")]
    }
  }
  # again part of print.ggplot, plotting adjusted version
  if(is.null(vp)){
    grid.draw(gtable)
  }
  else{
    if (is.character(vp)) 
      seekViewport(vp)
    else pushViewport(vp)
    grid.draw(gtable)
    upViewport()
  }
  invisible(p)
}


## This section for TBRG
## csvdir <- "/home/udumbu/rsb/OngoingProjects/CWC/Data/Nilgiris/tbrg/csv/"
## repdir<- "/home/udumbu/rsb/OngoingProjects/CWC/Reports/ForestDept/"
csvdir <- "/home/udumbu/rsb/OngoingProjects/CWC/Data/Aghnashini/tbrg/csv/"
repdir<- "/home/udumbu/rsb/OngoingProjects/CWC/Reports/ForestDeptSirsi/"
tbrgnum <- c(paste("00",1:9, sep=""), paste("0", 10:26, sep=""))
tbrgname <- paste("Rain Gauge No.",001:026, sep="")
daily.files <- c(paste("tbrg_", "00",1:9,"_Daily.csv", sep=""), paste("tbrg_", "0", 10:26,"_Daily.csv", sep="")) 
epsout <- paste(repdir,"ERE_tbrg_all.eps", sep="")
pdfout <- paste(repdir,"ERE_tbrg_all.pdf", sep="")
alltbrg <- data.frame(dt=numeric(0), mm_rain=numeric(0), tbrg=character(0))
allmntdat <- data.frame(dt=numeric(0), mm_rain=numeric(0), tbrg=character(0))
allcumdat <- data.frame(dt=numeric(0), mm_rain=numeric(0), tbrg=character(0))
for (i in 1:length(daily.files)){
    dailydat <- paste(csvdir, daily.files[i], sep="")
    csvout <- paste(repdir,"ERE_tbrg_", tbrgnum[i], ".csv", sep="")
    dat <- read.csv(file=dailydat)
    dat <- subset(dat, mm_rain> 100, select = c(dt, mm_rain))
    dat$dt <- as.Date(dat$dt)
    write.csv(dat, file=csvout)
    try(dat$tbrg <- tbrgname[i], silent=TRUE)
    alltbrg <- rbind(alltbrg,dat)
    ## for monthly averages
    mntdat <- read.csv(file=dailydat)
    mntdat <- subset(mntdat,  select = c(dt, mm_rain))
    allmntdat <- rbind(allmntdat,mntdat)
    ## for cumulative rain
    cumdat <- read.csv(file=dailydat)
    cumdat <- subset(mntdat,  select = c(dt, mm_rain))
    cumdat$tbrg <- as.factor(tbrgnum[i])
    allcumdat <- rbind(allcumdat,cumdat)
}
outplot <- ggplot(data = alltbrg, aes(dt, mm_rain)) + 
    geom_point() + facet_wrap(~tbrg) +
    theme(axis.text.x = element_text(angle = 90, size=8))+
    theme(axis.text.y = element_text(size=8))+
    theme(axis.title.x=element_text(size=10, face="bold", vjust=-.5))+
    theme(axis.title.y=element_text(size=10, face="bold", vjust=.25))+
    theme(strip.text.x = element_text(size = 8))+
    labs(x="Date", y="Rainfall in mm")
pdf(file=pdfout, width=10, height=6)
facetAdjust(outplot)
dev.off()
#ggsave(outplot, file=epsout, width=297, height=210, units="mm")
#ggsave(outplot, file=pdfout, width=297, height=210, units="mm")

## This section for WLR
csvdir <- "/home/udumbu/rsb/OngoingProjects/CWC/Data/Aghnashini/wlr/csv/"
wlrnum <- c(paste("00", 1:6, sep=""), "010", "011", "020", "021", "03b", "04b")
wlrnm1 <- paste("Water Level Recorder No.",001:006, sep="")
wlrnm2 <- c("Water Level Recorder No.010", "Water Level Recorder No.011", "Water Level Recorder No.020",
                "Water Level Recorder No.021", "Water Level Recorder No.03b", "Water Level Recorder No.04b")
wlrname <- c(wlrnm1, wlrnm2)
dlfl1 <- paste("wlr_", "00",1:6,"_Daily.csv", sep="")
dlfl2 <- c( "wlr_010_Daily.csv",  "wlr_011_Daily.csv",  "wlr_020_Daily.csv",
                     "wlr_021_Daily.csv",  "wlr_03b_Daily.csv",   "wlr_04b_Daily.csv")
daily.files <- c(dlfl1,dlfl2)
epsout <- paste(repdir,"WLR_all.eps", sep="")
pdfout <- paste(repdir,"WLR_all.pdf", sep="")
allwlr <- data.frame(dt=numeric(0), mm_rain=numeric(0), wlr=character(0))
for (i in 1:length(daily.files)){
    dailydat <- paste(csvdir, daily.files[i], sep="")
    csvout <- paste(repdir,"WLR_", wlrnum[i], ".csv", sep="")
    dat <- read.csv(file=dailydat)
    dat$dt <- as.Date(dat$dt)
    dat <- subset(dat, format.Date(dt, "%m")>"05" & format.Date(dt, "%m")<"13", c(dt, stage))
    write.csv(dat, file=csvout)
    try(dat$wlr <- wlrname[i], silent=TRUE)
    allwlr <- rbind(allwlr,dat)
}
outplot <- ggplot(data = allwlr, aes(dt, stage)) + 
    geom_line() + facet_wrap(~wlr) +
    theme(axis.text.x = element_text(angle = 90))+
    labs(x="Date", y="Stage in cm")
ggsave(outplot, file=epsout, width=297, height=210, units="mm")
ggsave(outplot, file=pdfout, width=297, height=210, units="mm")


## Get averages of all rainfall on a monthly basis
## Note that cumulative rainfall calculations are not correct.
## Issues with the data as well as rain gauges were installed at different times.
## We can only do this on a per-rain gauge basis.
allmntdat$dt <- as.yearmon(allmntdat$dt)
meanmntrain <- aggregate(allmntdat$mm_rain, by=list(allmntdat$dt, allcumdat$tbrg), FUN=mean, na.rm=TRUE)
allcumdat$dt <- as.yearmon(allcumdat$dt)
cummntrain <- aggregate(allcumdat$mm_rain, by=list(allcumdat$dt, allcumdat$tbrg), FUN=sum, na.rm=TRUE)
cumrain.tbrg<- aggregate(allcumdat$mm_rain, by=list(allcumdat$tbrg), FUN=sum, na.rm=TRUE)
summaryrain <- meanmntrain
names(summaryrain) <- c("mnt", "group", "x", "y")
summaryrain$y <-  cummntrain$x
summaryrain$mnt <- as.character(summaryrain$mnt)
names(summaryrain) <- c("Month", "Rain Gauge", "Average Daily Rain (mm)", "Cumulative Rain in (mm)")
write.csv(summaryrain, file=paste(repdir, "Average_Cumulative_Rainfall.csv", sep=""))
names(summaryrain) <- c("mnt", "tbrg", "avg", "cum")
fix(summarrain) ## for some reason ggplot2 throws an error in the next graph if this is not done
avgrainplot <-ggplot(data=summaryrain, aes(x=mnt,y=avg))  +
    geom_bar(stat="identity") + 
    facet_wrap(~tbrg) +
    theme(axis.text.x = element_text(angle = 90, size=7))+
    labs(x="Month", y="Average Rainfall in mm")

epsout <- paste(repdir,"TBRGAvgRain.eps", sep="")
pdfout <- paste(repdir,"TBRGAvgRain.pdf", sep="")
postscript(file=epsout, width = 180, height =240,  pointsize = 10, horizontal=TRUE)
facetAdjust(avgrainplot)
dev.off()

pdf(file=pdfout, width=10, height=6)
facetAdjust(avgrainplot)
dev.off()

outplot <- ggplot(data=cumrain.tbrg, aes(x=Group.1, y=x))  +
    geom_bar(stat="identity", colour="black", fill="grey")+
    theme(axis.text.x = element_text(angle = 90))+
    labs(x="Rain Gauge", y="Cumulative Rainfall in mm")
epsout <- paste(repdir,"TBRGCumRain.eps", sep="")
pdfout <- paste(repdir,"TBRGCumRain.pdf", sep="")
ggsave(outplot, file=epsout, width=240, height=180, units="mm")
ggsave(outplot, file=pdfout, width=240, height=180, units="mm")
## Need to rewrite code to do monthwise cumulative rainfall.
