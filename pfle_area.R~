## This script converts the x,y coordinates from a CSV file into area measured in cm2
## library(geosphere) # to convert from x,y to area
library(sp) # to plot polygons
library(gpclib) # polygon clipping operations
library(maptools) # spatial data conversion
library(stringr) # to manipulate strings
for (i in 1:length(prf.site)){
    site.dr <- paste(pfle.dr, prf.site[i], sep="")
    setwd(site.dr) # set working directory to site folder
    ## getwd() # uncomment if you want to confirm the working directory
    cx.fl.stm <- paste("ls ", fltpe, sep="") # prepare a system statement
    cx.fl <- system(cx.fl.stm, intern=TRUE) # create vector of csv file names
    for (j in 1: length(cx.fl)){ # loop for each csv file
        tmp <- read.csv(file=cx.fl[i], header = T, skip=5) # read in the csv, skip first 5 lines.
        crd <- subset(tmp, select=c(Length, Depth)) # extract coordinates
        rw.crd <- nrow(crd)
        crd[rw.crd+1, ] <- c(0, 0) # close the polygon
        crd[ , 2] <- crd[ , 2]*-1 # covert y values to negative (depth)
        gpc.crd <- as(crd, "gpc.poly")
        ## We will dump this to png later for now just visualise it
        mn <- paste("Site: ", prf.site[i], "|| File: ",cx.fl[j], sep=" ")
        plot(gpc.crd,xlab="Length in cm", ylab="Depth in cm", main=mn, add = FALSE)
        ## Need to split the polygon into three equally spaced chunks and calculate
        ## their areas separatey. This requires two steps
        ## 1) create three rectangular polygons each a third in size
        ## 2) intersect the cx with these three one by one
        ## 3) calculate the areas of each of these three.
        ## first create the three rectangles, remember y is in depth so min y is deepest
        max.xy <- c(max(crd$Length), min(crd$Depth))
        min.xy <- c(min(crd$Length), max(crd$Depth))
        max.x <- max(crd$Length)
        min.y <- min(crd$Depth)
        step.x <- max.x/3
        step.y <- min.y
        ## Loop so that areas of each reach are calculated separately
        for (k in 1: 3){
            ## create a dataframe to hold the three rectangles
            ## fix this rect <- paste("rect", k, sep="")
            rect <- as.data.frame(matrix(ncol = 2))
            names(rect) <- c("x", "y")
            ## bung coordinates of the rectangle
            rect[1, ] <- c((step.x * k) - step.x, 0.0)
            rect[2, ] <- c(step.x * k, 0.0)
            rect[3, ] <- c(step.x * k, step.y)
            rect[4, ] <- c((step.x* k) - step.x, step.y)
            rect[5, ] <- c((step.x* k) - step.x, 0.0)
            gpc.rect <- as(rect, "gpc.poly") # convert to gpc polygon object
            plot(gpc.rect, poly.args = list(border = 1+k), add = TRUE)
            res.area[j ,k+3] <- area.poly(gpc.rect) + area.poly(gpc.crd) - area.poly(union(gpc.crd,gpc.rect)) # area calculation
            k <- k+1;
        } 
        j <- j+1; # next cx file
    }
    i <- i+1; # next site
}
