## library("xts")
library("EcoHydRology")
library("ggplot2")
library("scales")
setwd("~/CurrProj/CWC/Anl/Reporting/CumulativePlots/")
## library("timeSeries")

## Script to generate a data frame and a hydrograph for each WLR
## Discharge in depth units
## Rainfall as averaged for all rain gauges in catchment
## Unit is daily
## Script reads in processed csv files generated from
## discharge and tbrg routines

site.name <- "Nilgiris" # or "Aghnashini"
if(site.name == "Nilgiris") stn <- c("101","102") #, "107", "108", "104")
if(site.name == "Aghnashini")  stn <- c("001","002")
## stn <- "101"
##---Define file names---##
data.dir <- "~/CurrProj/CWC/Data"
site.data.dir <- paste(data.dir, site.name, sep = "/")
dis.dir <- paste(site.data.dir, "discharge/csv/DailyDepth", sep = "/")
dis.flnm <- sapply(stn, FUN = function(x)list.files(dis.dir, full.names=FALSE, pattern = paste0("Stn",x)))
dis.full.flnm <- sapply(stn, FUN = function(x)list.files(dis.dir, full.names=TRUE, pattern = paste0("Stn",x)))

AvgRain <- function(x){
    stn.pairs <- read.csv(file = "~/CurrProj/CWC/Anl/sitewise_unintsname.csv",
                          colClasses = c(rep("character", 3)))
    stn.pairs <- stn.pairs[stn.pairs$stn==x,]
    stn.pairs <- stn.pairs[stn.pairs$log.type=="tbrg",]
    stn.tbrg <- as.list(stn.pairs$log.id)
    tbrg.fn <- lapply(stn.tbrg, function(x)(paste0("~/CurrProj/CWC/Data/", site.name,"/tbrg/csv/tbrg_", x, "_1 day.csv")))
    tbrg.dat <- do.call(rbind, lapply(tbrg.fn, read.csv))
    dat <- stats::aggregate(mm ~ dt.tm, tbrg.dat,mean, na.rm = T)
    names(dat) <- c("Timestamp", "Daily Rain")
    dat$Timestamp <- as.POSIXct(dat$Timestamp, tz = "Asia/Kolkata")
    dat$Date <- as.Date(dat$Timestamp)
    dat$datenum <- as.numeric(as.POSIXct(dat$Date,tz = "Asia/Kolkata"))
    return(dat)
}

tbrg.dat <- sapply(stn, AvgRain, simplify = FALSE, USE.NAMES = TRUE)
tbrg.dat <- read.csv(file = "~/CurrProj/CWC/Data/Nilgiris/tbrg/csv/tbrg_102_1 day.csv") # for weir
names(tbrg.dat) <- c("ID", "Daily Rain", "Timestamp")
tbrg.dat$Timestamp <- as.POSIXct(tbrg.dat$Timestamp, tz = "Asia/Kolkata", origin = "1970-01-01")
tbrg.dat$Date <- as.Date(tbrg.dat$Timestamp)
tbrg.dat$datenum <- as.numeric(as.POSIXct(tbrg.dat$Date,tz = "Asia/Kolkata", origin = "1970-01-01"))


## read.csv.files <- function(x){
##   stn <- paste0("stn_",substr(as.character(gsub("[^[:digit:]]", "", x)), 0, 3))
##   unq.stn <- unique(stn)
##   if(sum(stn %in% unq.stn)>length(unq.stn)){
##     dat <- lapply(unq.stn, function(i){
##       j <- paste0("stn_", substr(as.character(gsub("[^[:digit:]]", "", x)), 0, 3))
##       k <- do.call("rbind", lapply(x[j==i], read.csv, strip.white=TRUE))
##       return(k)
##     })
##     names(dat) <- unq.stn
##     return(dat)
##   }else{
##     dat <- lapply(x, read.csv, strip.white=TRUE)
##     names(dat) <- unq.stn
##     return(dat)
##   }
## }

## ReadDis <- function(x){
    ## dis.files <- as.list(dis.full.flnm[grep(pattern = x, dis.full.flnm)])
    ## dis.dat <- read.csv.files(dis.files)
    ## dis.dat <- dis.dat[[1]]
    ##  dis.dat$Timestamp <- as.POSIXct(x = dis.dat$Timestamp, tz = "Asia/Kolkata", origin = "1970-01-01")
    ## aggregate to daily
    ## dis.dat <- subset(dis.dat,!duplicated(dis.dat$Timestamp))
    ## print(paste("Calculating daily depth of discharge for WLR No.", x))
    ## ddis <- dis.dat[,6]
    ## tm <- dis.dat$Timestamp
    ## ts.dis <- xts(ddis, order.by = tm)
    ## daily.ddis <- apply.daily(ts.dis, sum)
    ## daily.ddis <- as.data.frame(daily.ddis)
    ## daily.ddis$Timestamp <- row.names(daily.ddis)
    ## daily.ddis$Timestamp <- as.POSIXct(daily.ddis$Timestamp, tz = "Asia/Kolkata", origin = "1970-01-01")
    ## row.names(daily.ddis) <- NULL
    ## names(daily.ddis)[1] <- "DepthDischarge"
    ## daily.ddis$Date <- as.Date(daily.ddis$Timestamp)
    ## daily.ddis$datenum <- as.numeric(daily.ddis$Date,tz = "Asia/Kolkata", origin = "1970-01-01")
    ## return(daily.ddis)
## }
discharge.dat <- sapply(dis.full.flnm, read.csv, simplify = FALSE)


## discharge.dat <- sapply(stn, ReadDis, simplify = FALSE)
rain.dd.dat <- mapply(merge, x = tbrg.dat, y = discharge.dat, by.x = "Date", by.y="date", SIMPLIFY = FALSE)

dat <- sapply(rain.dd.dat, function(x) x <- x[,c(1,3,5)], simplify = FALSE)
## rain.dd.dat <- merge(x = tbrg.dat, y = discharge.dat[[1]], by = "Date", SIMPLIFY = FALSE)
dat <- rain.dd.dat[,c(1,3,6)]

dat <- sapply(dat, function(x){
    x[,1] <- as.POSIXct(x[,1], tz = "Asia/Kolkata")
    return(x)
}, simplify = FALSE)

plot.hydrograph <- function(x, nm.x){
    png(filename = nm.x)
    hydrograph(x, stream.label="Depth of Discharge", P.units="mm", S1.col="blue")
    dev.off()
}
## hydrograph(dat, stream.label="Depth of Discharge", P.units="mm", S1.col="blue")

out.png <- as.list(paste0("Hydrograph_", stn, ".png"))
mapply(FUN = plot.hydrograph, dat, out.png)

write.list.to.csv <- function(x, nm.x){
    write.csv(x, file = nm.x)
    print(paste0(nm.x, " written. \n"))
}

nm.dat <- as.list(paste0("HydData", names(dat), ".csv"))
mapply(write.list.to.csv, dat, nm.dat)
## x <- dat
## x$DepthDischarge <- x$DepthDischarge*.5
x <- dat[[1]]
x <- x[x$Date > "2014-01-01" & x$Date < "2014-07-04",] 
## x <- x[x$Date > "2015-04-27" & x$Date < "2016-01-29",] # selecting continuous data for x[[2]]
names(x) <- c("dt", "rain", "discharge")
x$Date <- as.Date(x$dt, "%Y-%m-%d")
ggplot(data=x, aes(dt)) +
            theme_bw() +
            geom_line(aes(y = rain, colour = "Daily Rain (dm)"),
                      colour = "grey50", linetype = "solid") +
            geom_line(aes(y = discharge, colour = "Daily Discharge"),
                      colour = "grey30", linetype = "dotted")


#x$cumrain <- cumsum(x$rain)
x2 <- transform(x, discharge = na.locf(discharge), rain = na.locf(rain)) # only do to remove gaps
## x2 <- x
x2$cumrain <- cumsum(x2$rain)
## x$discharge[is.na(x$discharge)] <- na.locf(x$discharge)
x2$cumdis <- cumsum(x2$discharge)
ggplot(data=x2, aes(dt)) +
            theme_bw() +
            geom_line(aes(y = cumrain, colour = "Daily Rain (dm)"),
                      colour = "grey50", linetype = "solid") +
            geom_line(aes(y = cumdis, colour = "Daily Discharge"),
                      colour = "blue", linetype = "dotted")
